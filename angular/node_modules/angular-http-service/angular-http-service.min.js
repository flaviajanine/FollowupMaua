!function(window,angular,undefined){"use strict";angular.module("service.http",[]).constant("HttpMethod",{OPTIONS:"options",GET:"get",POST:"post",PUT:"put",DELETE:"delete",HEAD:"head",TRACE:"trace",CONNECT:"connect"}).service("HttpService",["$http","$q","HttpOptions","HttpMethod",function($http,$q,HttpOptions,HttpMethod){function handleRequest(method,url,withCredentials,parameters,options){var req={method:method,url:url,withCredentials:withCredentials};return withCredentials="undefined"!=typeof withCredentials&&withCredentials,parameters&&(req.params=parameters),options&&options.httpOptions.forEach(function(option){req[option.key]=option.value}),$http(req).then(_handleSuccess,_handleError)}function _handleError(response){return $q.reject(response)}function _handleSuccess(response){return response}var HttpService={GET:HttpMethod.GET,POST:HttpMethod.POST,PUT:HttpMethod.PUT,DELETE:HttpMethod.DELETE,handleRequest:handleRequest};return HttpService}]).factory("HttpOption",function(){var HttpOption=function(data){var HttpOption={key:data.key,value:data.value};return HttpOption};return HttpOption}).factory("HttpOptions",["HttpOption",function(HttpOption){var HttpOptions=function(passedOptions){function transformRequest(value){addHttpOption("transformRequest",value)}function data(value){addHttpOption("data",value)}function header(key,value){var headerValues;_haveHttpOption(HEADERS)?(headerValues=_findHttpOption(HEADERS)[0],headerValues[key]=value):headerValues={key:value},headers(headerValues)}function headers(value){addHttpOption(HEADERS,value)}function addHttpOption(key,value){if(_haveHttpOption(key)){for(var i in options)if(options[i].key===key){options[i].value=value;break}}else options.push(new HttpOption({key:key,value:value}))}function _processPassedOptions(passedOptions){"undefined"!=typeof passedOptions&&("undefined"!=typeof passedOptions.transformRequest&&transformRequest(passedOptions.transformRequest),passedOptions.data&&data(passedOptions.data),passedOptions.headers&&headers(passedOptions.headers))}function _haveHttpOption(key){var result=_findHttpOption(key);return result.length>0}function _findHttpOption(key){return options.filter(function(obj){return obj.key===key})}var options=[],HEADERS="headers";_processPassedOptions(passedOptions);var HttpOptions={httpOptions:options,transformRequest:transformRequest,data:data,headers:headers,header:header};return HttpOptions};return HttpOptions}])}(window,window.angular);
//# sourceMappingURL=angular-http-service.min.js.map
